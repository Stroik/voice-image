{"version":3,"sources":["Menu.js","Search.js","Image.js","Results.js","App.js","serviceWorker.js","index.js"],"names":["Commands","commands","setCommands","show","className","onClick","style","position","cursor","Menu","logo","isListening","setIsListening","useState","to","window","annyang","src","width","height","alt","Search","addImages","url","setUrl","history","useHistory","useParams","tag","page","voice","headers","Authorization","keyword","a","requestUrl","Axios","results","data","push","addCommands","start","Image","description","altDescription","urls","likes","small","href","raw","target","rel","Results","images","setImages","useEffect","length","fetchImages","map","image","alt_description","key","id","App","abort","path","children","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.908d2636.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Commands({commands, setCommands}){\r\n\r\n  const show = () => setCommands(!commands);\r\n  return(\r\n    commands ? \r\n      <li className=\"commands\">\r\n        <span onClick={() => show()} style={{position: 'relative'}} className=\"commands\">Available voice commands</span>\r\n        <ul>\r\n          <li>Search *tag images (ex: search dogs images)</li>\r\n          <li>Next page</li>\r\n          <li>Previous page</li>\r\n          <li>Go back</li>\r\n          <li>Stop listen</li>\r\n        </ul>\r\n      </li> : \r\n      <li onClick={() => show()} style={{cursor: 'pointer'}}>Available voice commands</li>\r\n  );\r\n}\r\n\r\nexport default function Menu({logo, isListening, setIsListening}){\r\n  const [ commands, setCommands ] = useState(false);\r\n\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"logo\">\r\n        <Link to={'/'}>{logo}</Link>\r\n      </div>\r\n      <nav>\r\n        <ul>\r\n          <Commands commands={commands} setCommands={setCommands} />\r\n          {window.annyang.isListening() ? <li className=\"listening\"><span>Listening</span> <img src={'/listening.gif'} width=\"24px\" height=\"24px\" alt=\"Listening\"/></li> : null}\r\n\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function Search({addImages, url, setUrl}){\r\n    let history = useHistory();\r\n    let { tag, page } = useParams();\r\n    page = 1;\r\n    const voice = window.annyang;\r\n    const headers = {\r\n        Authorization: 'Client-ID mh2cguZ3xIMtgldAof0OJKVIkTs8XiipaW8jO_Z1CuE'\r\n    };\r\n\r\n    const commands = {\r\n        'search *tag images': searchImages,\r\n        'next page': next,\r\n        'previous page': prev\r\n    }\r\n\r\n    async function searchImages(keyword){\r\n        const requestUrl = `${url}${keyword}&page=${page}`;\r\n        const results = await Axios(requestUrl, { headers });\r\n        tag = keyword;\r\n        setUrl(requestUrl);\r\n        addImages(results.data.results);\r\n        history.push(`/photos/${tag}/${page}`);\r\n    }\r\n\r\n    async function next(){\r\n        page++;\r\n        const requestUrl = `${url}${tag}&page=${page}`;\r\n        const results = await Axios(requestUrl, { headers });\r\n        addImages(results.data.results);\r\n        history.push(`/photos/${tag}/${page}`);\r\n    }\r\n\r\n    async function prev(){\r\n        page--;\r\n        const requestUrl = `${url}${tag}&page=${page}`;\r\n        const results = await Axios(requestUrl, { headers });\r\n        addImages(results.data.results);\r\n        history.push(`/photos/${tag}/${page}`);\r\n    }\r\n\r\n    function searchImage() {\r\n        voice.addCommands(commands);\r\n        voice.start();\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <h1>Search Images by voice commands</h1>\r\n            <button className=\"search\" onClick={() => searchImage()}> Press and say \"Search kitties images\" </button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Image({ description, altDescription, urls, likes }){\r\n    return (\r\n        <div className=\"flip-card\">\r\n            <div className=\"flip-card-inner\">\r\n                <div className=\"front\">\r\n                    <img src={urls.small} alt={altDescription} />\r\n                </div>\r\n                <div className=\"back\">\r\n                    <h1>Likes</h1>\r\n                    <p>{likes}</p>\r\n                    <a href={urls.raw} target=\"_blank\" rel=\"noopener noreferrer\" >Full image</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport Image from './Image';\r\nimport Axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nexport default function Results({images, url, setImages}){\r\n    let { tag, page } = useParams();\r\n    let history = useHistory();\r\n    const headers = {\r\n        Authorization: 'Client-ID mh2cguZ3xIMtgldAof0OJKVIkTs8XiipaW8jO_Z1CuE'\r\n    };\r\n    const voice = window.annyang;\r\n    const commands = {\r\n        'go back': goBack\r\n    };\r\n    voice.addCommands(commands);\r\n\r\n    function goBack(){\r\n        history.push('/');\r\n    }\r\n    useEffect(() => {\r\n        async function fetchImages(){\r\n            const results = await Axios(`${url}${tag}&page=${page}`, { headers });\r\n            setImages(results.data.results);\r\n        }\r\n        if(images.length === 0) fetchImages();\r\n    }, [ url, tag, page, headers, images, setImages ]);\r\n\r\n    return(\r\n        <div className=\"css-grid\">\r\n            { images.length === 0 ?\r\n            <h1>No results</h1> :\r\n            images.map(image => <Image description={image.description} altDescription={image.alt_description} urls={image.urls} likes={image.likes} key={image.id} />) }\r\n\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Menu from './Menu';\nimport Search from './Search';\nimport Results from './Results';\n\nfunction App() {\n\n  const [ images, setImages ] = useState([]);\n  const [ url, setUrl ] = useState('https://api.unsplash.com/search/photos/?query=');\n\n  const voice = window.annyang;\n\n  voice.addCommands({'stop listen': stopListen});\n\n  function stopListen(){\n    voice.abort();\n  }\n  \n  return (\n    <Router>\n      <div className=\"container\">\n        <Menu logo={'VoiceImage'} />\n        <Switch>\n          <Route path=\"/photos/:tag/:page\" children={<Results images={images} url={url} setImages={setImages}/>} />\n          <Route path=\"/\" children={<Search addImages={ setImages } url={url} setUrl={setUrl} />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}